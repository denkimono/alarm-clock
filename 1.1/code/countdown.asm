
CD_LONGKEYPRESSED
;	CASE	CD_MODE,CD_RUNNING
;	RETURN

	; STOP TIMER AND CLEAR COUNT IF SET KEY HELD DOWN
	CASE	IN_KEY,SET_KEY
	GOTO	CD_LKP1

	; ENTER LOW POWER MODE
	CASE	IN_KEY,0
	GOTO	CD_LPM1


	RETURN

; TOGGLE LOW POWER MODE
CD_LPM1
	CASE	LP_MODE,0
	GOTO	CD_LPM2

	CLRF	LP_MODE
	RETURN
CD_LPM2
	MOVLF	LP_MODE,1
	RETURN
	RETURN

CD_LKP1

	MOVLF	CD_MODE,CD_PAUSED

	; UN-FREEZE DISPLAY
	BCF	MORE_FLAGS,FREEZE

	; RESET RUN FLAG (NOW WE CAN ACCEPT NEW TIME INPUT)
	BCF	MORE_FLAGS,TIMER_RUN

	; CLEAR COUNT
	CLRF	HOUR
	CLRF	MIN
	CLRF	SEC
	CLRF	HUN

	MOVLW	D'0'
	MOVWF	DIG1
	MOVWF	DIG2
	MOVWF	DIG3
	MOVWF	DIG4
	MOVWF	DIG5
	MOVWF	DIG6

	; SET TO COUNT UP MODE
	BCF MORE_FLAGS,UP_DOWN

	RETURN


CD_MODECHANGED
	CASE	CD_MODE,CD_PAUSED
	GOTO	CD_MCD1
	RETURN
CD_MCD1
	; REDRAW THE DISPLAY WITH CURRENT CD TIMER VALUES
;	CALL	CD_D4
	CALL	CD_SHOW_HOUR
	CALL	CD_SHOW_MIN
	CALL	CD_SHOW_SEC
	CALL	CD_SHOW_HUN

	RETURN


CD_KEYPRESSED

	CASE	LP_MODE,0
	GOTO	CD_K4

	; MOMENTARILY LIGHT THE DISPLAY
	MOVLF	LP_MODE,2
	RETURN	

CD_K4

	; CHECK FOR START/STOP BUTTON
	CASE	IN_KEY,SET_KEY
	GOTO	CD_K2

	CASE CD_MODE,CD_PAUSED
	GOTO CD_K1

	; CHECK FOR FREEZE (LAP) FUNCTION
	CASE IN_KEY,D'5'
	GOTO FREEZE_COUNT

	; CHECK FOR LOW POWER KEY SO SETTING LP MODE DOESN'T START THE TICKING
	CASE IN_KEY,D'0'
	RETURN

	; TOGGLE TICK SOUND IF ANY OTHER KEY PRESSED
	MOVFW	MORE_FLAGS
	XORLW	B'00000001'
	MOVWF	MORE_FLAGS

	RETURN
	
CD_K1

	; DON'T ACCEPT I/P IF TIMER HAS BEEN RUN (FOR LAP BUTTON FEATURE)
	BTFSC	MORE_FLAGS,TIMER_RUN
	RETURN

	; CHECK VALUE IS < 10
	MOVLW D'10'
	SUBWF	IN_KEY,W
	BTFSC	STATUS,C
	RETURN

	MOVFF	DIG1,DIG2
	MOVFF	DIG2,DIG3
	MOVFF	DIG3,DIG4
	MOVFF	DIG4,DIG5
	MOVFF	DIG5,DIG6
	MOVFF	DIG6,IN_KEY

	; COPY DISPLAY TO MEMORY
	; HOURS
	MOVLW	DIG1
	CALL COPY_DIGIT
	MOVWF	HOUR

	; MINUTES
	MOVLW	DIG3
	CALL COPY_DIGIT
	MOVWF	MIN

	; SECONDS
	MOVLW	DIG5
	CALL COPY_DIGIT
	MOVWF	SEC

	CLRF	HUN

	; SEE IF WE SHOULD SET COUNT DOWN MODE (DISPLAY != 0)
	CLRW
	ADDWF	HOUR,W
	ADDWF	MIN,W
	ADDWF	SEC,W

	BTFSS	STATUS,Z
	; SET TO COUNT DOWN MODE
	BSF MORE_FLAGS,UP_DOWN

	RETURN

CD_K2
	CASE	CD_MODE,CD_RUNNING
	GOTO	CD_K3

	; IF PAUSED WITH ZERO ON THE DISPLAY THEN ASSUME COUNT UP MODE
	MOVFW	HOUR
	IORWF	MIN,W
	IORWF	SEC,W
	IORWF	HUN,W
	BTFSC	STATUS,Z
	; SET COUNT UP MODE
	BCF MORE_FLAGS,UP_DOWN
	MOVLF	CD_MODE,CD_RUNNING

	; NOTE THAT TIMER HAS BEEN STARTED (DON'T ACCEPT CHANGES UNTIL A TIMER RESET)
	BSF	MORE_FLAGS,TIMER_RUN

	RETURN

CD_K3
	; UN-FREEZE DISPLAY
	BCF	MORE_FLAGS,FREEZE
	MOVLF	CD_MODE,CD_PAUSED

	; REFRESH DISPLAY (IN CASE TIMER HAS BEEN IN FREEZE MODE)
	CALL	CD_MCD1
	RETURN

; called by the ISR, so keep it quick
; update the digits only when they change
UPDATE_COUNTDOWN

	; IF IN COUNT UP MODE THEN CARRY ON COUNTING (NO ALARM OCCURS IN COUNT UP MODE)
	BTFSS MORE_FLAGS,UP_DOWN
	GOTO	UCD1
	
	; IF DISPLAY IS ZERO, THEN PAUSE TIMER/SOUND ALARM
	MOVFW	HOUR
	IORWF	MIN,W
	IORWF	SEC,W
	IORWF	HUN,W
	BTFSS	STATUS,Z
	GOTO	UCD1

	; TIMER EXPIRED, SOUND ALARM OR STAY PAUSED
	CASE CD_MODE,CD_PAUSED
	GOTO	UCD6

	BCF		MORE_FLAGS,TICKING
	BSF		TICKS,CD_ALARM_ON
	MOVLF	CD_MODE,CD_PAUSED

	; FORCE MODE TO COUNTDOWN MODE
	CLRF	TM_MODE
	CLRF	AL_MODE
	CLRF	LP_MODE
	MOVLF	MODE,MODE_CD
	
	; UN-FREEZE DISPLAY
	BCF	MORE_FLAGS,FREEZE

	; REDRAW THE COUNTDOWN DISPLAY
	CALL	CD_D5

UCD6
	RETURN

UCD1

	; UPDATE THE COUNTER COUNT

	; ARE WE COUNTING UP OR DOWN?
	BTFSS	MORE_FLAGS,UP_DOWN
	GOTO	UCD_COUNT_UP

	; COUNT DOWN

	DECF	HUN,F

	CASE	HUN,0XFF
	GOTO	UCD2

;	CALL	CD_SHOW_HUN
	RETURN
UCD2
;	CALL	CD_SHOW_HUN
;
	CLRF	HUN
	; CHECK IF THERE ARE ANY MORE HH:MM:SS LEFT
	MOVFW	HOUR
	IORWF	MIN,W
	IORWF	SEC,W
	BTFSC	STATUS,Z
	RETURN

	MOVLF	HUN,D'99'
	DECF	SEC,F

	CALL	TICK_TOCK	; MAKE TICKING SOUND


;	; DISPLAY NEW SECONDS
;	MOVF	HOUR,F
;	BTFSS	STATUS,Z
;	DISPLAY SEC,DIG5
	
	CASE	SEC,0XFF
	GOTO	UCD3

;	CALL	CD_SHOW_HUN
	RETURN
UCD3
	CLRF	SEC
;	CALL	CD_SHOW_HUN

	; CHECK IF THERE ARE ANY MORE HH:MM LEFT
	MOVLW	0X00
	MOVFW	HOUR
	IORWF	MIN,W
	BTFSC	STATUS,Z
	RETURN

	MOVLF	SEC,D'59'
	DECF	MIN,F
	CASE	MIN,0XFF
	GOTO	UCD4

;	CALL	CD_SHOW_HUN
	RETURN
UCD4
	CLRF	MIN
;	CALL	CD_SHOW_HUN

	; CHECK IF THERE ARE ANY MORE HH LEFT
	MOVFW	HOUR
	BTFSC	STATUS,Z
	RETURN

	MOVLF	MIN,D'59'
	DECF	HOUR,F
	CASE	HOUR,0XFF
	GOTO	UCD5

;	CALL	CD_SHOW_HUN
	RETURN
UCD5
	CLRF	HOUR
;	CALL	CD_SHOW_HUN
	RETURN


; COUNT UP
UCD_COUNT_UP

	INCF	HUN,F

	CASE	HUN,D'100'
	GOTO	UCD2_UP

	RETURN
UCD2_UP
	CLRF	HUN
	INCF	SEC,F

	CALL	TICK_TOCK	; MAKE TICKING SOUND
	
	CASE	SEC,D'60'
	GOTO	UCD3_UP

	RETURN
UCD3_UP
	CLRF	SEC

	INCF	MIN,F
	CASE	MIN,D'60'
	GOTO	UCD4_UP
	RETURN
UCD4_UP
	CLRF	MIN

	INCF	HOUR,F
	CASE	HOUR,D'100'
	GOTO	UCD5_UP
	RETURN
UCD5_UP
	CLRF	HOUR
	RETURN
;

; MAKE TICK TOCK SOUND
TICK_TOCK
	CASE MODE,MODE_CD
	GOTO	T_T1
	RETURN
T_T1

	; TOGGLE TICK TONE
	MOVFW	MORE_FLAGS
	XORLW	B'00000100'
	MOVWF	MORE_FLAGS

	BTFSS	MORE_FLAGS,TICK_EN
	RETURN

	TICKSOUND
	RETURN

FREEZE_COUNT
	TOGGLEBIT MORE_FLAGS,FREEZE
	RETURN
