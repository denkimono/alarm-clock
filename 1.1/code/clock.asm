TM_KEYPRESSED

	CASE	LP_MODE,0
	GOTO	TM_KP3

	; MOMENTARILY LIGHT THE DISPLAY
	MOVLF	LP_MODE,2
	RETURN	

TM_KP3

	CASE TM_MODE,TM_TIME
	GOTO TM_KP2

	; IF SET KEY PRESSED THEN CANCEL SETTING MODE
	MOVLW	SET_KEY
	SUBWF	IN_KEY,W
	BTFSS	STATUS,Z
	GOTO	TM_KP1

	MOVLF	TM_MODE,TM_TIME
	RETURN
	

TM_KP1
	CALL	SET_DIGIT

	; IF 'W' IS ZERO, THEN WE'RE DONE
	ANDLW	0XFF
	BTFSS	STATUS,Z
	RETURN

	; UPDATE TIME FROM DISPLAY
	CALL COPY_TIME_DISPLAY

	; restart tick counters to make sure first second is a full one
	MOVLF	SUBTICKS,SUBTICK_COUNT
	MOVLF	ITSECOND,TSECOND_COUNT
	MOVLF	IHSECOND,HSECOND_COUNT
	MOVLF	ISECOND,SECOUND_COUNT
	BCF		TICKS,TICKS_HSECOND

	; BACK TO TIME MODE
	MOVLF TM_MODE,TM_TIME
	RETURN

TM_KP2

	; SET THE DISPLAY BRIGHTNESS (3 LEVELS)
	CASE IN_KEY,D'1'
	GOTO	SET_BRIGHTNESS_1

	CASE IN_KEY,D'2'
	GOTO	SET_BRIGHTNESS_2

	CASE IN_KEY,D'3'
	GOTO	SET_BRIGHTNESS_3

	; TOGGLE TIME FREEZE (LAP) MODE
	CASE IN_KEY,D'5'
	GOTO	FREEZE_CLOCK

	RETURN

;	; CHECK VALUE IS < 10
;	MOVLW	D'10'
;	SUBWF	IN_KEY,W
;	BTFSC	STATUS,C
;	RETURN

;	; SET THE DISPLAY BRIGHTNESS
;	MOVLF	TEMP1,0X09	
;	MOVFW	IN_KEY
;	SUBWF	TEMP1,W
;	MOVWF	BRIGHTNESS ; BRIGHTNESS = 0 - 9
;	RETURN

SET_BRIGHTNESS_1
	MOVLF	BRIGHTNESS,D'9'
	RETURN

SET_BRIGHTNESS_2
	MOVLF	BRIGHTNESS,D'7'
	RETURN

SET_BRIGHTNESS_3
	MOVLF	BRIGHTNESS,D'0'
	RETURN

FREEZE_CLOCK
	MOVF	SNOOZE_MINS,F; DON'T ALLOW FREEZE DURING SNOOZE
	BTFSS	STATUS,Z
	RETURN
	TOGGLEBIT MORE_FLAGS,FREEZE
	RETURN

; COPY DECIMAL VALUE OF PAIRS OF DIGITS IN DISPLAY MEMORY TO 'W'
; ON ENTRY 'W' EQUALS THE CURSOR POSITION TO READ FROM
COPY_DIGIT

;	ADDLW	DIG1
	; SAVE START POSITION
	MOVWF	TEMP1

; TENS
	MOVWF	FSR	
	MOVFW	INDF

	MOVWF	D_NUM
	MOVLF	D_MOD,D'10'
	CALL	MUL
	MOVWF	TEMP2

; UNITS
	INCF	TEMP1,W
	MOVWF	FSR	
	MOVFW	INDF
	ADDWF	TEMP2,W

	RETURN

COPY_TIME_DISPLAY

	; HOURS
	MOVLW	DIG3
	CALL COPY_DIGIT
	MOVWF	C_HOUR

	; MINS
	MOVLW	DIG5
	CALL COPY_DIGIT
	MOVWF	C_MIN

	; SECS
	CLRF C_SEC

	RETURN


TM_LONGKEYPRESSED

	CASE TM_MODE,TM_SET
	RETURN

	; UN-FREEZE DISPLAY
	BCF	MORE_FLAGS,FREEZE

	; ENTER TIME SET MODE
	CASE	IN_KEY,SET_KEY
	GOTO	TM_LKP1

	; ENTER LOW POWER MODE
	CASE	IN_KEY,0
	GOTO	TM_LPM1

	RETURN

; TOGGLE LOW POWER MODE
TM_LPM1
	CASE	LP_MODE,0
	GOTO	TM_LPM2

	CLRF	LP_MODE
	RETURN
TM_LPM2
	MOVLF	LP_MODE,1
	RETURN

; ENTER TIME SET MODE
TM_LKP1

	; DON'T ALLOW TIME SET MODE IN LOW POWER MODE
	CASE	LP_MODE,0
	GOTO	TM_LKP2
	RETURN

TM_LKP2

	MOVLF	CURSOR,0X02
	MOVLF	TM_MODE,TM_SET
	; SET UP DISPLAY FOR TIME SETTING
	MOVLF	DIG1,LETTER_T
	MOVLF	DIG2,BLANK
	MOVLF	DIG3,UNDERSCORE
	MOVLF	DIG4,UNDERSCORE
	MOVLF	DIG5,UNDERSCORE
	MOVLF	DIG6,UNDERSCORE
	MOVLF	DIG7,SET_COLON
	RETURN

UPDATE_CLOCK
	INCF	C_SEC,F
	CASE	C_SEC,D'60'
	GOTO	UC2
	GOTO	UC1
UC2
	CLRF	C_SEC	
	INCF	C_MIN,F
	CASE	C_MIN,D'60'
	GOTO	UC3
	GOTO	UC1
UC3
	CLRF	C_MIN
	INCF	C_HOUR,F
	CASE	C_HOUR,D'24'
	GOTO	UC4
	GOTO	UC1
UC4
	CLRF	C_HOUR
UC1

	; ONLY DO THIS WHEN MINUTES CHANGE
	MOVF	C_SEC,F
	BTFSS	STATUS,Z
	RETURN

	CALL	ALARM_CHECK
	CALL	SNOOZE_CHECK

	RETURN

ALARM_CHECK
	; CHECK IF ALARM IS ENABLED
	MOVFW	A_HOUR
	SUBLW	0XFF
	BTFSC	STATUS,Z
	GOTO	UC5

	; CHECK IF IT'S ALARM TIME
	MOVFW	A_HOUR
	SUBWF	C_HOUR,W
	BTFSS	STATUS,Z
	GOTO	UC5

	MOVFW	A_MIN
	SUBWF	C_MIN,W
	BTFSS	STATUS,Z
	GOTO	UC5


; START ALARM
START_ALARM
	BCF		MORE_FLAGS,TICKING
	BSF		TICKS,TM_ALARM_ON

	; FORCE MODE TO TIME MODE
	CLRF	TM_MODE
	CLRF	AL_MODE
	CLRF	LP_MODE
	MOVLF	MODE,MODE_TM

	; UN-FREEZE DISPLAY
	BCF	MORE_FLAGS,FREEZE

	RETURN
UC5
	; CANCEL ALARM
	BCF		TICKS,TM_ALARM_ON
	RETURN

; CALL EVERY MINUTE TO SOUND SNOOZE ALARM
SNOOZE_CHECK

	MOVF	SNOOZE_MINS,F
	BTFSC	STATUS,Z
	GOTO	SC1

	; DEC SNOOZE TIME
	DECF	SNOOZE_MINS,F
	BTFSS	STATUS,Z
	GOTO	SC1
	
	; SNOOZE TIMER EXPIRED, SOUND ALARM AS NORMAL
	GOTO	START_ALARM
SC1
	RETURN


; DISPLAY THE CLOCK FOR A FEW SECONDS WHEN IN LP MODE
MOMENTARILY_SHOW_CLOCK

	MOVFW	LP_MODE
	SUBLW	1; 2-LP_MODE

	BTFSC	STATUS,C
	RETURN

; IF LP_MODE >= 2 THEN RE-ENABLE THE DISPLAY FOR A FEW SECONDS
	INCF	LP_MODE,F
	CASE	LP_MODE,6
	GOTO	MSC1
	RETURN

; BACK TO LP MODE
MSC1
	MOVLF	LP_MODE,1
	RETURN
